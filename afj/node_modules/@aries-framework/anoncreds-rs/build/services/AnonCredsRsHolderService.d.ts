import type { AnonCredsCredentialInfo, AnonCredsHolderService, AnonCredsProof, CreateCredentialRequestOptions, CreateCredentialRequestReturn, CreateLinkSecretOptions, CreateLinkSecretReturn, CreateProofOptions, GetCredentialOptions, GetCredentialsForProofRequestOptions, GetCredentialsForProofRequestReturn, GetCredentialsOptions, StoreCredentialOptions } from '@aries-framework/anoncreds';
import type { AgentContext } from '@aries-framework/core';
export declare class AnonCredsRsHolderService implements AnonCredsHolderService {
    createLinkSecret(agentContext: AgentContext, options?: CreateLinkSecretOptions): Promise<CreateLinkSecretReturn>;
    createProof(agentContext: AgentContext, options: CreateProofOptions): Promise<AnonCredsProof>;
    createCredentialRequest(agentContext: AgentContext, options: CreateCredentialRequestOptions): Promise<CreateCredentialRequestReturn>;
    storeCredential(agentContext: AgentContext, options: StoreCredentialOptions): Promise<string>;
    getCredential(agentContext: AgentContext, options: GetCredentialOptions): Promise<AnonCredsCredentialInfo>;
    getCredentials(agentContext: AgentContext, options: GetCredentialsOptions): Promise<AnonCredsCredentialInfo[]>;
    deleteCredential(agentContext: AgentContext, credentialId: string): Promise<void>;
    getCredentialsForProofRequest(agentContext: AgentContext, options: GetCredentialsForProofRequestOptions): Promise<GetCredentialsForProofRequestReturn>;
    private queryFromRestrictions;
}
