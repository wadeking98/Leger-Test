import type { CreateCredentialRequestOptions, CreateCredentialRequestReturn, CreateProofOptions, GetCredentialOptions, StoreCredentialOptions, GetCredentialsForProofRequestOptions, GetCredentialsForProofRequestReturn, CreateLinkSecretReturn, CreateLinkSecretOptions, GetCredentialsOptions } from './AnonCredsHolderServiceOptions';
import type { AnonCredsCredentialInfo } from '../models';
import type { AnonCredsProof } from '../models/exchange';
import type { AgentContext } from '@aries-framework/core';
export declare const AnonCredsHolderServiceSymbol: unique symbol;
export interface AnonCredsHolderService {
    createLinkSecret(agentContext: AgentContext, options: CreateLinkSecretOptions): Promise<CreateLinkSecretReturn>;
    createProof(agentContext: AgentContext, options: CreateProofOptions): Promise<AnonCredsProof>;
    storeCredential(agentContext: AgentContext, options: StoreCredentialOptions, metadata?: Record<string, unknown>): Promise<string>;
    getCredential(agentContext: AgentContext, options: GetCredentialOptions): Promise<AnonCredsCredentialInfo>;
    getCredentials(agentContext: AgentContext, options: GetCredentialsOptions): Promise<AnonCredsCredentialInfo[]>;
    createCredentialRequest(agentContext: AgentContext, options: CreateCredentialRequestOptions): Promise<CreateCredentialRequestReturn>;
    deleteCredential(agentContext: AgentContext, credentialId: string): Promise<void>;
    getCredentialsForProofRequest(agentContext: AgentContext, options: GetCredentialsForProofRequestOptions): Promise<GetCredentialsForProofRequestReturn>;
}
