"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndyVdrModule = void 0;
const core_1 = require("@aries-framework/core");
const IndyVdrApi_1 = require("./IndyVdrApi");
const IndyVdrModuleConfig_1 = require("./IndyVdrModuleConfig");
const IndyVdrPoolService_1 = require("./pool/IndyVdrPoolService");
/**
 * @public
 * */
class IndyVdrModule {
    constructor(config) {
        this.api = IndyVdrApi_1.IndyVdrApi;
        this.config = new IndyVdrModuleConfig_1.IndyVdrModuleConfig(config);
    }
    register(dependencyManager) {
        // Warn about experimental module
        dependencyManager
            .resolve(core_1.AgentConfig)
            .logger.warn("The '@aries-framework/indy-vdr' module is experimental and could have unexpected breaking changes. When using this module, make sure to use strict versions for all @aries-framework packages.");
        // Config
        dependencyManager.registerInstance(IndyVdrModuleConfig_1.IndyVdrModuleConfig, this.config);
        // Services
        dependencyManager.registerSingleton(IndyVdrPoolService_1.IndyVdrPoolService);
        // Api
        dependencyManager.registerContextScoped(IndyVdrApi_1.IndyVdrApi);
    }
    async initialize(agentContext) {
        const indyVdrPoolService = agentContext.dependencyManager.resolve(IndyVdrPoolService_1.IndyVdrPoolService);
        for (const pool of indyVdrPoolService.pools) {
            if (pool.config.connectOnStartup) {
                await pool.connect();
            }
        }
    }
}
exports.IndyVdrModule = IndyVdrModule;
//# sourceMappingURL=IndyVdrModule.js.map