"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NonRevokedIntervalOverrideListStruct = exports.NonRevokedIntervalOverrideArray = exports.NonRevokedIntervalOverrideStruct = exports.RevocationEntryListStruct = exports.RevocationEntryArray = exports.RevocationEntryStruct = exports.ObjectHandleListStruct = exports.ObjectHandleArray = exports.CredentialProveListStruct = exports.CredentialProveArray = exports.CredentialProveStruct = exports.CredentialEntryListStruct = exports.CredentialEntryArray = exports.CredentialEntryStruct = exports.CredRevInfoStruct = exports.I32ListStruct = exports.I64ListStruct = exports.StringListStructPtr = exports.StringListStruct = exports.ByteBufferStructPtr = exports.ByteBufferStruct = exports.StringArrayPtr = exports.Int32Array = exports.Int64Array = exports.ByteBufferArrayPtr = exports.ByteBufferArray = exports.StringArray = void 0;
const ref = __importStar(require("@2060.io/ref-napi"));
const ref_array_di_1 = __importDefault(require("ref-array-di"));
const ref_struct_di_1 = __importDefault(require("ref-struct-di"));
const primitives_1 = require("./primitives");
const CStruct = (0, ref_struct_di_1.default)(ref);
const CArray = (0, ref_array_di_1.default)(ref);
exports.StringArray = CArray('string');
const FFI_INT32_ARRAY = CArray('int32');
const FFI_INT32_ARRAY_PTR = ref.refType(FFI_INT32_ARRAY);
const FFI_INT64_ARRAY = CArray('int64');
const FFI_INT64_ARRAY_PTR = ref.refType(FFI_INT64_ARRAY);
exports.ByteBufferArray = CArray('uint8');
exports.ByteBufferArrayPtr = ref.refType(primitives_1.FFI_STRING);
exports.Int64Array = FFI_INT64_ARRAY;
exports.Int32Array = FFI_INT32_ARRAY;
exports.StringArrayPtr = ref.refType(exports.StringArray);
exports.ByteBufferStruct = CStruct({
    len: primitives_1.FFI_INT64,
    data: exports.ByteBufferArrayPtr,
});
exports.ByteBufferStructPtr = ref.refType(exports.ByteBufferStruct);
exports.StringListStruct = CStruct({
    count: ref.types.size_t,
    data: exports.StringArray,
});
exports.StringListStructPtr = ref.refType(exports.StringListStruct);
exports.I64ListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: FFI_INT64_ARRAY,
});
exports.I32ListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: FFI_INT32_ARRAY,
});
exports.CredRevInfoStruct = CStruct({
    reg_def: primitives_1.FFI_OBJECT_HANDLE,
    reg_def_private: primitives_1.FFI_OBJECT_HANDLE,
    status_list: primitives_1.FFI_OBJECT_HANDLE,
    reg_idx: primitives_1.FFI_INT64,
});
exports.CredentialEntryStruct = CStruct({
    credential: primitives_1.FFI_ISIZE,
    timestamp: primitives_1.FFI_INT64,
    rev_state: primitives_1.FFI_ISIZE,
});
exports.CredentialEntryArray = CArray(exports.CredentialEntryStruct);
exports.CredentialEntryListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: exports.CredentialEntryArray,
});
exports.CredentialProveStruct = CStruct({
    entry_idx: primitives_1.FFI_INT64,
    referent: primitives_1.FFI_STRING,
    is_predicate: primitives_1.FFI_INT8,
    reveal: primitives_1.FFI_INT8,
});
exports.CredentialProveArray = CArray(exports.CredentialProveStruct);
exports.CredentialProveListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: exports.CredentialProveArray,
});
exports.ObjectHandleArray = CArray('size_t');
exports.ObjectHandleListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: exports.ObjectHandleArray,
});
exports.RevocationEntryStruct = CStruct({
    def_entry_idx: primitives_1.FFI_INT64,
    entry: primitives_1.FFI_ISIZE,
    timestamp: primitives_1.FFI_INT64,
});
exports.RevocationEntryArray = CArray(exports.RevocationEntryStruct);
exports.RevocationEntryListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: exports.RevocationEntryArray,
});
exports.NonRevokedIntervalOverrideStruct = CStruct({
    rev_reg_def_id: primitives_1.FFI_STRING,
    requested_from_ts: primitives_1.FFI_INT32,
    override_rev_status_list_ts: primitives_1.FFI_INT32,
});
exports.NonRevokedIntervalOverrideArray = CArray(exports.NonRevokedIntervalOverrideStruct);
exports.NonRevokedIntervalOverrideListStruct = CStruct({
    count: primitives_1.FFI_ISIZE,
    data: exports.NonRevokedIntervalOverrideArray,
});
//# sourceMappingURL=structures.js.map