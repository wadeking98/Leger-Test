import * as ref from '@2060.io/ref-napi';
import RefArray from 'ref-array-di';
import RefStruct from 'ref-struct-di';
export declare const StringArray: RefArray.ArrayType<string | null>;
export declare const ByteBufferArray: RefArray.ArrayType<number>;
export declare const ByteBufferArrayPtr: ref.Type<ref.Pointer<string | null>>;
export declare const Int64Array: RefArray.ArrayType<string | number>;
export declare const Int32Array: RefArray.ArrayType<number>;
export declare const StringArrayPtr: ref.Type<ref.Pointer<RefArray.TypedArray<string | null, number>>>;
export declare const ByteBufferStruct: RefStruct.StructType<{
    len: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<ref.Pointer<string | null>>;
}>;
export declare const ByteBufferStructPtr: ref.Type<ref.Pointer<RefStruct.StructObject<{
    len: string | number;
    data: ref.Pointer<string | null>;
}>>>;
export declare const StringListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<string | null, number>>;
}>;
export declare const StringListStructPtr: ref.Type<ref.Pointer<RefStruct.StructObject<{
    count: string | number;
    data: RefArray.TypedArray<string | null, number>;
}>>>;
export declare const I64ListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<string | number, number>>;
}>;
export declare const I32ListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<number, number>>;
}>;
export declare const CredRevInfoStruct: RefStruct.StructType<{
    reg_def: import("ref-napi").Type<string | number>;
    reg_def_private: import("ref-napi").Type<string | number>;
    status_list: import("ref-napi").Type<string | number>;
    reg_idx: import("ref-napi").Type<string | number>;
}>;
export declare const CredentialEntryStruct: RefStruct.StructType<{
    credential: import("ref-napi").Type<string | number>;
    timestamp: import("ref-napi").Type<string | number>;
    rev_state: import("ref-napi").Type<string | number>;
}>;
export declare const CredentialEntryArray: RefArray.ArrayType<RefStruct.StructObject<{
    credential: string | number;
    timestamp: string | number;
    rev_state: string | number;
}>>;
export declare const CredentialEntryListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<RefStruct.StructObject<{
        credential: string | number;
        timestamp: string | number;
        rev_state: string | number;
    }>, number>>;
}>;
export declare const CredentialProveStruct: RefStruct.StructType<{
    entry_idx: import("ref-napi").Type<string | number>;
    referent: import("ref-napi").Type<string | null>;
    is_predicate: import("ref-napi").Type<number>;
    reveal: import("ref-napi").Type<number>;
}>;
export declare const CredentialProveArray: RefArray.ArrayType<RefStruct.StructObject<{
    entry_idx: string | number;
    referent: string | null;
    is_predicate: number;
    reveal: number;
}>>;
export declare const CredentialProveListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<RefStruct.StructObject<{
        entry_idx: string | number;
        referent: string | null;
        is_predicate: number;
        reveal: number;
    }>, number>>;
}>;
export declare const ObjectHandleArray: RefArray.ArrayType<string | number>;
export declare const ObjectHandleListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<string | number, number>>;
}>;
export declare const RevocationEntryStruct: RefStruct.StructType<{
    def_entry_idx: import("ref-napi").Type<string | number>;
    entry: import("ref-napi").Type<string | number>;
    timestamp: import("ref-napi").Type<string | number>;
}>;
export declare const RevocationEntryArray: RefArray.ArrayType<RefStruct.StructObject<{
    def_entry_idx: string | number;
    entry: string | number;
    timestamp: string | number;
}>>;
export declare const RevocationEntryListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<RefStruct.StructObject<{
        def_entry_idx: string | number;
        entry: string | number;
        timestamp: string | number;
    }>, number>>;
}>;
export declare const NonRevokedIntervalOverrideStruct: RefStruct.StructType<{
    rev_reg_def_id: import("ref-napi").Type<string | null>;
    requested_from_ts: import("ref-napi").Type<number>;
    override_rev_status_list_ts: import("ref-napi").Type<number>;
}>;
export declare const NonRevokedIntervalOverrideArray: RefArray.ArrayType<RefStruct.StructObject<{
    rev_reg_def_id: string | null;
    requested_from_ts: number;
    override_rev_status_list_ts: number;
}>>;
export declare const NonRevokedIntervalOverrideListStruct: RefStruct.StructType<{
    count: import("ref-napi").Type<string | number>;
    data: import("ref-napi").Type<RefArray.TypedArray<RefStruct.StructObject<{
        rev_reg_def_id: string | null;
        requested_from_ts: number;
        override_rev_status_list_ts: number;
    }>, number>>;
}>;
