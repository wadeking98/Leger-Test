export declare const nativeBindings: {
    readonly anoncreds_buffer_free: readonly [import("@2060.io/ref-napi").Type<void>, readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>]];
    readonly anoncreds_create_credential: readonly ["uint", readonly ["size_t", "size_t", "size_t", "size_t", import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, "size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_credential_definition: readonly ["uint", readonly ["string", "size_t", "string", "string", "string", "int8", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_credential_offer: readonly ["uint", readonly ["string", "string", "size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_credential_request: readonly ["uint", readonly ["string", "string", "size_t", "string", "string", "size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_link_secret: readonly ["uint", readonly [import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_or_update_revocation_state: readonly ["uint", readonly ["size_t", "size_t", "int64", "string", "size_t", "size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_presentation: readonly ["uint", readonly ["size_t", import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<import("ref-struct-di").StructObject<{
            credential: string | number;
            timestamp: string | number;
            rev_state: string | number;
        }>, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<import("ref-struct-di").StructObject<{
            entry_idx: string | number;
            referent: string | null;
            is_predicate: number;
            reveal: number;
        }>, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, "string", import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_revocation_registry_def: readonly ["uint", readonly ["size_t", "string", "string", "string", "string", "int64", "string", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_create_schema: readonly ["uint", readonly ["string", "string", "string", import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_credential_get_attribute: readonly ["uint", readonly ["size_t", "string", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_encode_credential_attributes: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_generate_nonce: readonly ["uint", readonly [import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_get_current_error: readonly ["uint", readonly [import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_object_free: readonly [import("@2060.io/ref-napi").Type<void>, readonly ["size_t"]];
    readonly anoncreds_string_free: readonly [import("@2060.io/ref-napi").Type<void>, readonly [import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_object_get_json: readonly ["uint", readonly ["size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<import("ref-struct-di").StructObject<{
        len: string | number;
        data: import("@2060.io/ref-napi").Pointer<string | null>;
    }>>>]];
    readonly anoncreds_object_get_type_name: readonly ["uint", readonly ["size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_presentation_request_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_process_credential: readonly ["uint", readonly ["size_t", "size_t", "string", "size_t", "size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_revocation_registry_definition_get_attribute: readonly ["uint", readonly ["size_t", "string", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_set_default_logger: readonly ["uint", readonly []];
    readonly anoncreds_verify_presentation: readonly ["uint", readonly ["size_t", "size_t", import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | null, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<string | number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<import("ref-struct-di").StructObject<{
            rev_reg_def_id: string | null;
            requested_from_ts: number;
            override_rev_status_list_ts: number;
        }>, number>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<number>>]];
    readonly anoncreds_create_revocation_status_list: readonly ["uint", readonly ["size_t", "string", "size_t", "size_t", "string", "int8", "int64", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_update_revocation_status_list_timestamp_only: readonly ["uint", readonly ["int64", "size_t", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_update_revocation_status_list: readonly ["uint", readonly ["size_t", "size_t", "size_t", "size_t", import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<number, number>>;
    }>, import("ref-struct-di").StructType<{
        count: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("ref-array-di").TypedArray<number, number>>;
    }>, "int64", import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | number>>]];
    readonly anoncreds_version: readonly ["string", readonly []];
    readonly anoncreds_credential_request_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_credential_request_metadata_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_presentation_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_credential_offer_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_revocation_registry_definition_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_revocation_registry_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_revocation_status_list_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_revocation_state_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_credential_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_credential_definition_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_credential_definition_private_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_revocation_registry_definition_private_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_key_correctness_proof_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
    readonly anoncreds_schema_from_json: readonly ["uint", readonly [import("ref-struct-di").StructType<{
        len: import("ref-napi").Type<string | number>;
        data: import("ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>;
    }>, import("@2060.io/ref-napi").Type<import("@2060.io/ref-napi").Pointer<string | null>>]];
};
