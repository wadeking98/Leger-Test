export type EncryptedBufferOptions = {
    buffer: Uint8Array;
    tagPos: number;
    noncePos: number;
};
export type AeadParamsOptions = {
    nonceLength: number;
    tagLength: number;
};
export declare class EncryptedBuffer {
    private buffer;
    private tagPos;
    private noncePos;
    constructor({ noncePos, tagPos, buffer }: EncryptedBufferOptions);
    get ciphertextWithTag(): Uint8Array;
    get ciphertext(): Uint8Array;
    get nonce(): Uint8Array;
    get tag(): Uint8Array;
    get parts(): {
        ciphertext: Uint8Array;
        tag: Uint8Array;
        nonce: Uint8Array;
    };
}
export declare class AeadParams {
    nonceLength: number;
    tagLength: number;
    constructor({ nonceLength, tagLength }: AeadParamsOptions);
}
