import type { AriesAskar, EntryListCountOptions, EntryListFreeOptions, EntryListGetCategoryOptions, EntryListGetNameOptions, EntryListGetTagsOptions, EntryListGetValueOptions, KeyAeadDecryptOptions, KeyAeadEncryptOptions, KeyAeadGetPaddingOptions, KeyAeadGetParamsOptions, KeyAeadRandomNonceOptions, KeyConvertOptions, KeyCryptoBoxOpenOptions, KeyCryptoBoxOptions, KeyCryptoBoxSealOpenOptions, KeyCryptoBoxSealOptions, KeyDeriveEcdh1puOptions, KeyDeriveEcdhEsOptions, KeyEntryListCountOptions, KeyEntryListFreeOptions, KeyEntryListGetAlgorithmOptions, KeyEntryListGetMetadataOptions, KeyEntryListGetNameOptions, KeyEntryListGetTagsOptions, KeyEntryListLoadLocalOptions, KeyFreeOptions, KeyFromJwkOptions, KeyFromKeyExchangeOptions, KeyFromPublicBytesOptions, KeyFromSecretBytesOptions, KeyFromSeedOptions, KeyGenerateOptions, KeyGetAlgorithmOptions, KeyGetEphemeralOptions, KeyGetJwkPublicOptions, KeyGetJwkSecretOptions, KeyGetJwkThumbprintOptions, KeyGetPublicBytesOptions, KeyGetSecretBytesOptions, KeySignMessageOptions, KeyUnwrapKeyOptions, KeyVerifySignatureOptions, KeyWrapKeyOptions, ScanFreeOptions, ScanNextOptions, ScanStartOptions, SessionCloseOptions, SessionCountOptions, SessionFetchAllKeysOptions, SessionFetchAllOptions, SessionFetchKeyOptions, SessionFetchOptions, SessionInsertKeyOptions, SessionRemoveAllOptions, SessionRemoveKeyOptions, SessionStartOptions, SessionUpdateKeyOptions, SessionUpdateOptions, SetCustomLoggerOptions, SetMaxLogLevelOptions, StoreCloseOptions, StoreCopyToOptions, StoreCreateProfileOptions, StoreGenerateRawKeyOptions, StoreGetProfileNameOptions, StoreOpenOptions, StoreProvisionOptions, StoreRekeyOptions, StoreRemoveOptions, StoreRemoveProfileOptions, EncryptedBuffer, MigrateIndySdkOptions, StoreGetDefaultProfileOptions, StoreSetDefaultProfileOptions, StoreListProfilesOptions } from '@hyperledger/aries-askar-shared';
import { ScanHandle, EntryListHandle, StoreHandle, LocalKeyHandle, AeadParams, SessionHandle, KeyEntryListHandle } from '@hyperledger/aries-askar-shared';
export declare class NodeJSAriesAskar implements AriesAskar {
    private promisify;
    private promisifyWithResponse;
    private handleError;
    get nativeAriesAskar(): {
        askar_version: () => string;
        askar_get_current_error: (args_0: Buffer) => number;
        askar_buffer_free: (args_0: Buffer) => number;
        askar_clear_custom_logger: () => number;
        askar_set_custom_logger: (args_0: number, args_1: Buffer, args_2: number, args_3: number, args_4: number) => number;
        askar_set_default_logger: () => number;
        askar_set_max_log_level: (args_0: number) => number;
        askar_entry_list_count: (args_0: Buffer, args_1: Buffer) => number;
        askar_entry_list_free: (args_0: Buffer) => number;
        askar_entry_list_get_category: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_entry_list_get_name: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_entry_list_get_tags: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_entry_list_get_value: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_string_list_count: (args_0: Buffer, args_1: Buffer) => number;
        askar_string_list_free: (args_0: Buffer) => number;
        askar_string_list_get_item: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_aead_decrypt: (args_0: Buffer, args_1: Buffer, args_2: Buffer, args_3: Buffer, args_4: Buffer, args_5: Buffer) => number;
        askar_key_aead_encrypt: (args_0: Buffer, args_1: Buffer, args_2: Buffer, args_3: Buffer, args_4: Buffer) => number;
        askar_key_aead_get_padding: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_aead_get_params: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_aead_random_nonce: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_convert: (args_0: Buffer, args_1: string, args_2: Buffer) => number;
        askar_key_crypto_box: (args_0: Buffer, args_1: Buffer, args_2: Buffer, args_3: Buffer, args_4: Buffer) => number;
        askar_key_crypto_box_open: (args_0: Buffer, args_1: Buffer, args_2: Buffer, args_3: Buffer, args_4: Buffer) => number;
        askar_key_crypto_box_random_nonce: (args_0: Buffer) => number;
        askar_key_crypto_box_seal: (args_0: Buffer, args_1: Buffer, args_2: Buffer) => number;
        askar_key_crypto_box_seal_open: (args_0: Buffer, args_1: Buffer, args_2: Buffer) => number;
        askar_key_derive_ecdh_1pu: (args_0: string, args_1: Buffer, args_2: Buffer, args_3: Buffer, args_4: Buffer, args_5: Buffer, args_6: Buffer, args_7: Buffer, args_8: number, args_9: Buffer) => number;
        askar_key_derive_ecdh_es: (args_0: string, args_1: Buffer, args_2: Buffer, args_3: Buffer, args_4: Buffer, args_5: Buffer, args_6: number, args_7: Buffer) => number;
        askar_key_entry_list_count: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_entry_list_free: (args_0: Buffer) => number;
        askar_key_entry_list_get_algorithm: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_entry_list_get_metadata: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_entry_list_get_name: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_entry_list_get_tags: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_entry_list_load_local: (args_0: Buffer, args_1: number, args_2: Buffer) => number;
        askar_key_free: (args_0: Buffer) => number;
        askar_key_from_jwk: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_from_key_exchange: (args_0: string, args_1: Buffer, args_2: Buffer, args_3: Buffer) => number;
        askar_key_from_public_bytes: (args_0: string, args_1: Buffer, args_2: Buffer) => number;
        askar_key_from_secret_bytes: (args_0: string, args_1: Buffer, args_2: Buffer) => number;
        askar_key_from_seed: (args_0: string, args_1: Buffer, args_2: string, args_3: Buffer) => number;
        askar_key_generate: (args_0: string, args_1: number, args_2: Buffer) => number;
        askar_key_get_algorithm: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_get_ephemeral: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_get_jwk_public: (args_0: Buffer, args_1: string, args_2: Buffer) => number;
        askar_key_get_jwk_secret: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_get_jwk_thumbprint: (args_0: Buffer, args_1: string, args_2: Buffer) => number;
        askar_key_get_public_bytes: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_get_secret_bytes: (args_0: Buffer, args_1: Buffer) => number;
        askar_key_sign_message: (args_0: Buffer, args_1: Buffer, args_2: string, args_3: Buffer) => number;
        askar_key_unwrap_key: (args_0: Buffer, args_1: string, args_2: Buffer, args_3: Buffer, args_4: Buffer, args_5: Buffer) => number;
        askar_key_verify_signature: (args_0: Buffer, args_1: Buffer, args_2: Buffer, args_3: string, args_4: Buffer) => number;
        askar_key_wrap_key: (args_0: Buffer, args_1: Buffer, args_2: Buffer, args_3: Buffer) => number;
        askar_scan_free: (args_0: number) => number;
        askar_scan_next: (args_0: number, args_1: Buffer, args_2: number) => number;
        askar_scan_start: (args_0: number, args_1: string, args_2: string, args_3: string, args_4: number, args_5: number, args_6: Buffer, args_7: number) => number;
        askar_session_close: (args_0: number, args_1: number, args_2: Buffer, args_3: number) => number;
        askar_session_count: (args_0: number, args_1: string, args_2: string, args_3: Buffer, args_4: number) => number;
        askar_session_fetch: (args_0: number, args_1: string, args_2: string, args_3: number, args_4: Buffer, args_5: number) => number;
        askar_session_fetch_all: (args_0: number, args_1: string, args_2: string, args_3: number, args_4: number, args_5: Buffer, args_6: number) => number;
        askar_session_fetch_all_keys: (args_0: number, args_1: string, args_2: string, args_3: string, args_4: number, args_5: number, args_6: Buffer, args_7: number) => number;
        askar_session_fetch_key: (args_0: number, args_1: string, args_2: number, args_3: Buffer, args_4: number) => number;
        askar_session_insert_key: (args_0: number, args_1: Buffer, args_2: string, args_3: string, args_4: string, args_5: number, args_6: Buffer, args_7: number) => number;
        askar_session_remove_all: (args_0: number, args_1: string, args_2: string, args_3: Buffer, args_4: number) => number;
        askar_session_remove_key: (args_0: number, args_1: string, args_2: Buffer, args_3: number) => number;
        askar_session_start: (args_0: number, args_1: string, args_2: number, args_3: Buffer, args_4: number) => number;
        askar_session_update: (args_0: number, args_1: number, args_2: string, args_3: string, args_4: Buffer, args_5: string, args_6: number, args_7: Buffer, args_8: number) => number;
        askar_session_update_key: (args_0: number, args_1: string, args_2: string, args_3: string, args_4: number, args_5: Buffer, args_6: number) => number;
        askar_store_close: (args_0: number, args_1: Buffer, args_2: number) => number;
        askar_store_copy: (args_0: number, args_1: string, args_2: string, args_3: string, args_4: number, args_5: Buffer, args_6: number) => number;
        askar_store_create_profile: (args_0: number, args_1: string, args_2: Buffer, args_3: number) => number;
        askar_store_generate_raw_key: (args_0: Buffer, args_1: Buffer) => number;
        askar_store_get_profile_name: (args_0: number, args_1: Buffer, args_2: number) => number;
        askar_store_get_default_profile: (args_0: number, args_1: Buffer, args_2: number) => number;
        askar_store_list_profiles: (args_0: number, args_1: Buffer, args_2: number) => number;
        askar_store_open: (args_0: string, args_1: string, args_2: string, args_3: string, args_4: Buffer, args_5: number) => number;
        askar_store_provision: (args_0: string, args_1: string, args_2: string, args_3: string, args_4: number, args_5: Buffer, args_6: number) => number;
        askar_store_rekey: (args_0: number, args_1: string, args_2: string, args_3: Buffer, args_4: number) => number;
        askar_store_remove: (args_0: string, args_1: Buffer, args_2: number) => number;
        askar_store_remove_profile: (args_0: number, args_1: string, args_2: Buffer, args_3: number) => number;
        askar_store_set_default_profile: (args_0: number, args_1: string, args_2: Buffer, args_3: number) => number;
        askar_migrate_indy_sdk: (args_0: string, args_1: string, args_2: string, args_3: string, args_4: Buffer, args_5: number) => number;
    };
    version(): string;
    getCurrentError(): string;
    clearCustomLogger(): void;
    setCustomLogger({ logLevel, flush, enabled, logger }: SetCustomLoggerOptions): void;
    setDefaultLogger(): void;
    setMaxLogLevel(options: SetMaxLogLevelOptions): void;
    entryListCount(options: EntryListCountOptions): number;
    entryListFree(options: EntryListFreeOptions): void;
    entryListGetCategory(options: EntryListGetCategoryOptions): string;
    entryListGetName(options: EntryListGetNameOptions): string;
    entryListGetTags(options: EntryListGetTagsOptions): string | null;
    entryListGetValue(options: EntryListGetValueOptions): Uint8Array;
    keyAeadDecrypt(options: KeyAeadDecryptOptions): Uint8Array;
    keyAeadEncrypt(options: KeyAeadEncryptOptions): EncryptedBuffer;
    keyAeadGetPadding(options: KeyAeadGetPaddingOptions): number;
    keyAeadGetParams(options: KeyAeadGetParamsOptions): AeadParams;
    keyAeadRandomNonce(options: KeyAeadRandomNonceOptions): Uint8Array;
    keyConvert(options: KeyConvertOptions): LocalKeyHandle;
    keyCryptoBox(options: KeyCryptoBoxOptions): Uint8Array;
    keyCryptoBoxOpen(options: KeyCryptoBoxOpenOptions): Uint8Array;
    keyCryptoBoxRandomNonce(): Uint8Array;
    keyCryptoBoxSeal(options: KeyCryptoBoxSealOptions): Uint8Array;
    keyCryptoBoxSealOpen(options: KeyCryptoBoxSealOpenOptions): Uint8Array;
    keyDeriveEcdh1pu(options: KeyDeriveEcdh1puOptions): LocalKeyHandle;
    keyDeriveEcdhEs(options: KeyDeriveEcdhEsOptions): LocalKeyHandle;
    keyEntryListCount(options: KeyEntryListCountOptions): number;
    keyEntryListFree(options: KeyEntryListFreeOptions): void;
    keyEntryListGetAlgorithm(options: KeyEntryListGetAlgorithmOptions): string;
    keyEntryListGetMetadata(options: KeyEntryListGetMetadataOptions): string | null;
    keyEntryListGetName(options: KeyEntryListGetNameOptions): string;
    keyEntryListGetTags(options: KeyEntryListGetTagsOptions): string | null;
    keyEntryListLoadLocal(options: KeyEntryListLoadLocalOptions): LocalKeyHandle;
    keyFree(options: KeyFreeOptions): void;
    keyFromJwk(options: KeyFromJwkOptions): LocalKeyHandle;
    keyFromKeyExchange(options: KeyFromKeyExchangeOptions): LocalKeyHandle;
    keyFromPublicBytes(options: KeyFromPublicBytesOptions): LocalKeyHandle;
    keyFromSecretBytes(options: KeyFromSecretBytesOptions): LocalKeyHandle;
    keyFromSeed(options: KeyFromSeedOptions): LocalKeyHandle;
    keyGenerate(options: KeyGenerateOptions): LocalKeyHandle;
    keyGetAlgorithm(options: KeyGetAlgorithmOptions): string;
    keyGetEphemeral(options: KeyGetEphemeralOptions): number;
    keyGetJwkPublic(options: KeyGetJwkPublicOptions): string;
    keyGetJwkSecret(options: KeyGetJwkSecretOptions): Uint8Array;
    keyGetJwkThumbprint(options: KeyGetJwkThumbprintOptions): string;
    keyGetPublicBytes(options: KeyGetPublicBytesOptions): Uint8Array;
    keyGetSecretBytes(options: KeyGetSecretBytesOptions): Uint8Array;
    keySignMessage(options: KeySignMessageOptions): Uint8Array;
    keyUnwrapKey(options: KeyUnwrapKeyOptions): LocalKeyHandle;
    keyVerifySignature(options: KeyVerifySignatureOptions): boolean;
    keyWrapKey(options: KeyWrapKeyOptions): EncryptedBuffer;
    scanFree(options: ScanFreeOptions): void;
    scanNext(options: ScanNextOptions): Promise<EntryListHandle | null>;
    scanStart(options: ScanStartOptions): Promise<ScanHandle>;
    sessionClose(options: SessionCloseOptions): Promise<void>;
    sessionCount(options: SessionCountOptions): Promise<number>;
    sessionFetch(options: SessionFetchOptions): Promise<EntryListHandle | null>;
    sessionFetchAll(options: SessionFetchAllOptions): Promise<EntryListHandle | null>;
    sessionFetchAllKeys(options: SessionFetchAllKeysOptions): Promise<KeyEntryListHandle | null>;
    sessionFetchKey(options: SessionFetchKeyOptions): Promise<KeyEntryListHandle | null>;
    sessionInsertKey(options: SessionInsertKeyOptions): Promise<void>;
    sessionRemoveAll(options: SessionRemoveAllOptions): Promise<number>;
    sessionRemoveKey(options: SessionRemoveKeyOptions): Promise<void>;
    sessionStart(options: SessionStartOptions): Promise<SessionHandle>;
    sessionUpdate(options: SessionUpdateOptions): Promise<void>;
    sessionUpdateKey(options: SessionUpdateKeyOptions): Promise<void>;
    storeClose(options: StoreCloseOptions): Promise<void>;
    storeCopyTo(options: StoreCopyToOptions): Promise<void>;
    storeCreateProfile(options: StoreCreateProfileOptions): Promise<string>;
    storeGenerateRawKey(options: StoreGenerateRawKeyOptions): string;
    storeGetDefaultProfile(options: StoreGetDefaultProfileOptions): Promise<string>;
    storeGetProfileName(options: StoreGetProfileNameOptions): Promise<string>;
    storeListProfiles(options: StoreListProfilesOptions): Promise<string[]>;
    storeOpen(options: StoreOpenOptions): Promise<StoreHandle>;
    storeProvision(options: StoreProvisionOptions): Promise<StoreHandle>;
    storeRekey(options: StoreRekeyOptions): Promise<void>;
    storeRemove(options: StoreRemoveOptions): Promise<number>;
    storeRemoveProfile(options: StoreRemoveProfileOptions): Promise<number>;
    storeSetDefaultProfile(options: StoreSetDefaultProfileOptions): Promise<void>;
    migrateIndySdk(options: MigrateIndySdkOptions): Promise<void>;
}
