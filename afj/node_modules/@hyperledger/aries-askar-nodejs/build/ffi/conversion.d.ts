import type { ByteBufferType, EncryptedBufferType } from './structures';
import type { Pointer } from '@2060.io/ref-napi';
import type { TypedArray } from 'ref-array-di';
import { EncryptedBuffer } from '@hyperledger/aries-askar-shared';
export declare const byteBufferClassToStruct: ({ len, data }: ByteBufferType) => import("ref-struct-di").StructObject<{
    len: string | number;
    data: Pointer<TypedArray<number, number>>;
}>;
export declare const secretBufferClassToStruct: ({ len, data }: ByteBufferType) => import("ref-struct-di").StructObject<{
    len: string | number;
    data: Pointer<TypedArray<number, number>>;
}>;
export declare const uint8arrayToByteBufferStruct: (buf: Buffer) => import("ref-struct-di").StructObject<{
    len: string | number;
    data: Pointer<TypedArray<number, number>>;
}>;
export declare const byteBufferToBuffer: ({ data, len }: ByteBufferType) => Buffer;
export declare const secretBufferToBuffer: ({ data, len }: ByteBufferType) => Buffer;
export declare const encryptedBufferStructToClass: ({ secretBuffer, tagPos, noncePos }: EncryptedBufferType) => EncryptedBuffer;
