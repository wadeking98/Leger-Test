"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevocationRegistryDefinition = void 0;
const AnoncredsObject_1 = require("../AnoncredsObject");
const register_1 = require("../register");
const CredentialDefinition_1 = require("./CredentialDefinition");
const RevocationRegistryDefinitionPrivate_1 = require("./RevocationRegistryDefinitionPrivate");
const utils_1 = require("./utils");
class RevocationRegistryDefinition extends AnoncredsObject_1.AnoncredsObject {
    static create(options) {
        let createReturnObj;
        // Objects created within this method must be freed up
        const objectHandles = [];
        try {
            const credentialDefinition = options.credentialDefinition instanceof CredentialDefinition_1.CredentialDefinition
                ? options.credentialDefinition.handle
                : (0, utils_1.pushToArray)(CredentialDefinition_1.CredentialDefinition.fromJson(options.credentialDefinition).handle, objectHandles);
            createReturnObj = register_1.anoncreds.createRevocationRegistryDefinition(Object.assign(Object.assign({}, options), { credentialDefinition }));
        }
        finally {
            objectHandles.forEach((handle) => handle.clear());
        }
        return {
            revocationRegistryDefinition: new RevocationRegistryDefinition(createReturnObj.revocationRegistryDefinition.handle),
            revocationRegistryDefinitionPrivate: new RevocationRegistryDefinitionPrivate_1.RevocationRegistryDefinitionPrivate(createReturnObj.revocationRegistryDefinitionPrivate.handle),
        };
    }
    static fromJson(json) {
        return new RevocationRegistryDefinition(register_1.anoncreds.revocationRegistryDefinitionFromJson({ json: JSON.stringify(json) }).handle);
    }
    getId() {
        return register_1.anoncreds.revocationRegistryDefinitionGetAttribute({ objectHandle: this.handle, name: 'id' });
    }
    getMaximumCredentialNumber() {
        return Number(register_1.anoncreds.revocationRegistryDefinitionGetAttribute({ objectHandle: this.handle, name: 'max_cred_num' }));
    }
    getTailsHash() {
        return register_1.anoncreds.revocationRegistryDefinitionGetAttribute({ objectHandle: this.handle, name: 'tails_hash' });
    }
    getTailsLocation() {
        return register_1.anoncreds.revocationRegistryDefinitionGetAttribute({ objectHandle: this.handle, name: 'tails_location' });
    }
}
exports.RevocationRegistryDefinition = RevocationRegistryDefinition;
//# sourceMappingURL=RevocationRegistryDefinition.js.map