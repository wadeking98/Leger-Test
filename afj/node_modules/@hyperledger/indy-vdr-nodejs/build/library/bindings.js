"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nativeBindings = void 0;
const ffi_1 = require("../ffi");
exports.nativeBindings = {
    // first element is method return type, second element is list of method argument types
    indy_vdr_set_config: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING]],
    indy_vdr_set_default_logger: [ffi_1.FFI_ERROR_CODE, []],
    indy_vdr_set_protocol_version: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_INT64]],
    indy_vdr_set_socks_proxy: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING]],
    indy_vdr_version: [ffi_1.FFI_STRING, []],
    indy_vdr_get_current_error: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING_PTR]],
    // requests
    indy_vdr_build_acceptance_mechanisms_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_attrib_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_cred_def_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_custom_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_disable_all_txn_author_agreements_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_get_acceptance_mechanisms_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_INT64, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_attrib_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_INT32, ffi_1.FFI_INT64, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_cred_def_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_get_nym_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_INT32, ffi_1.FFI_INT64, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_revoc_reg_def_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_get_revoc_reg_delta_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_INT64, ffi_1.FFI_INT64, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_revoc_reg_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_INT64, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_schema_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_txn_author_agreement_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_INT64, ffi_1.FFI_INT64, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_txn_author_agreement_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_get_txn_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_INT32, ffi_1.FFI_INT32, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_get_validator_info_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_nym_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_INT32, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_revoc_reg_def_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    indy_vdr_build_revoc_reg_entry_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER],
    ],
    indy_vdr_build_schema_request: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_REQUEST_HANDLE_POINTER]],
    // pool
    indy_vdr_pool_create: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_STRING, ffi_1.FFI_HANDLE_POINTER]],
    indy_vdr_pool_close: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_POOL_HANDLE]],
    indy_vdr_pool_refresh: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_POOL_HANDLE, ffi_1.FFI_CALLBACK_PTR, ffi_1.FFI_CALLBACK_ID]],
    indy_vdr_pool_submit_action: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_POOL_HANDLE, ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_STRING, ffi_1.FFI_INT32, ffi_1.FFI_CALLBACK_PTR, ffi_1.FFI_CALLBACK_ID],
    ],
    indy_vdr_pool_submit_request: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_POOL_HANDLE, ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_CALLBACK_PTR, ffi_1.FFI_CALLBACK_ID],
    ],
    indy_vdr_pool_get_status: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_POOL_HANDLE, ffi_1.FFI_CALLBACK_PTR, ffi_1.FFI_CALLBACK_ID]],
    indy_vdr_pool_get_transactions: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_POOL_HANDLE, ffi_1.FFI_CALLBACK_PTR, ffi_1.FFI_CALLBACK_ID]],
    indy_vdr_pool_get_verifiers: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_POOL_HANDLE, ffi_1.FFI_CALLBACK_PTR, ffi_1.FFI_CALLBACK_ID]],
    indy_vdr_prepare_txn_author_agreement_acceptance: [
        ffi_1.FFI_ERROR_CODE,
        [ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_STRING, ffi_1.FFI_UINT64, ffi_1.FFI_STRING_PTR],
    ],
    indy_vdr_request_free: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE]],
    indy_vdr_request_get_body: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_STRING_PTR]],
    indy_vdr_request_get_signature_input: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_STRING_PTR]],
    indy_vdr_request_set_endorser: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_STRING]],
    indy_vdr_request_set_multi_signature: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_STRING, ffi_1.ByteBuffer]],
    indy_vdr_request_set_signature: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE, ffi_1.ByteBuffer]],
    indy_vdr_request_set_txn_author_agreement_acceptance: [ffi_1.FFI_ERROR_CODE, [ffi_1.FFI_REQUEST_HANDLE, ffi_1.FFI_STRING]],
};
//# sourceMappingURL=bindings.js.map