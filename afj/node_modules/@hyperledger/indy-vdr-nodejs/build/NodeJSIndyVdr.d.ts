import type { AcceptanceMechanismsRequestOptions, AttribRequestOptions, CredentialDefinitionRequestOptions, CustomRequestOptions, DisableAllTransactionAuthorAgreementsRequestOptions, GetAcceptanceMechanismsRequestOptions, GetAttribRequestOptions, GetCredentialDefinitionRequestOptions, GetNymRequestOptions, GetRevocationRegistryDefinitionRequestOptions, GetRevocationRegistryDeltaRequestOptions, GetRevocationRegistryRequestOptions, GetSchemaRequestOptions, GetTransactionAuthorAgreementRequestOptions, GetTransactionRequestOptions, GetValidatorInfoActionOptions, IndyVdr, NymRequestOptions, PoolCreateOptions, PoolStatus, PoolSubmitActionOptions, PoolSubmitRequestOptions, PrepareTxnAuthorAgreementAcceptanceOptions, RequestSetEndorserOptions, RequestSetMultiSignatureOptions, RequestSetSignatureOptions, RequestSetTxnAuthorAgreementAcceptanceOptions, RevocationRegistryDefinitionRequestOptions, RevocationRegistryEntryRequestOptions, SchemaRequestOptions, TransactionAuthorAgreementRequestOptions, Transactions, Verifiers } from '@hyperledger/indy-vdr-shared';
export declare class NodeJSIndyVdr implements IndyVdr {
    private promisify;
    private promisifyWithResponse;
    private handleError;
    get nativeIndyVdr(): import("./library").NativeMethods;
    getCurrentError(): string;
    version(): string;
    setConfig(options: {
        config: Record<string, unknown>;
    }): void;
    setDefaultLogger(): void;
    setProtocolVersion(options: {
        version: number;
    }): void;
    setSocksProxy(options: {
        socksProxy: string;
    }): void;
    buildAcceptanceMechanismsRequest(options: AcceptanceMechanismsRequestOptions): number;
    buildGetAcceptanceMechanismsRequest(options: GetAcceptanceMechanismsRequestOptions): number;
    buildAttribRequest(options: AttribRequestOptions): number;
    buildGetAttribRequest(options: GetAttribRequestOptions): number;
    buildCredDefRequest(options: CredentialDefinitionRequestOptions): number;
    buildGetCredDefRequest(options: GetCredentialDefinitionRequestOptions): number;
    buildGetRevocRegDefRequest(options: GetRevocationRegistryDefinitionRequestOptions): number;
    buildGetRevocRegRequest(options: GetRevocationRegistryRequestOptions): number;
    buildGetRevocRegDeltaRequest(options: GetRevocationRegistryDeltaRequestOptions): number;
    buildRevocRegDefRequest(options: RevocationRegistryDefinitionRequestOptions): number;
    buildCustomRequest(options: CustomRequestOptions): number;
    buildDisableAllTxnAuthorAgreementsRequest(options: DisableAllTransactionAuthorAgreementsRequestOptions): number;
    buildGetNymRequest(options: GetNymRequestOptions): number;
    buildGetSchemaRequest(options: GetSchemaRequestOptions): number;
    buildGetTxnAuthorAgreementRequest(options: GetTransactionAuthorAgreementRequestOptions): number;
    buildGetTxnRequest(options: GetTransactionRequestOptions): number;
    buildGetValidatorInfoRequest(options: GetValidatorInfoActionOptions): number;
    buildNymRequest(options: NymRequestOptions): number;
    buildRevocRegEntryRequest(options: RevocationRegistryEntryRequestOptions): number;
    buildSchemaRequest(options: SchemaRequestOptions): number;
    buildTxnAuthorAgreementRequest(options: TransactionAuthorAgreementRequestOptions): number;
    poolCreate(options: PoolCreateOptions): number;
    poolRefresh(options: {
        poolHandle: number;
    }): Promise<void>;
    poolGetStatus(options: {
        poolHandle: number;
    }): Promise<PoolStatus>;
    poolGetTransactions(options: {
        poolHandle: number;
    }): Promise<Transactions>;
    poolGetVerifiers(options: {
        poolHandle: number;
    }): Promise<Verifiers>;
    poolSubmitAction<T>(options: PoolSubmitActionOptions & {
        poolHandle: number;
    }): Promise<T>;
    poolSubmitRequest<T>(options: PoolSubmitRequestOptions & {
        poolHandle: number;
    }): Promise<T>;
    poolClose(options: {
        poolHandle: number;
    }): void;
    prepareTxnAuthorAgreementAcceptance(options: PrepareTxnAuthorAgreementAcceptanceOptions): string;
    requestFree(options: {
        requestHandle: number;
    }): void;
    requestGetBody(options: {
        requestHandle: number;
    }): string;
    requestGetSignatureInput(options: {
        requestHandle: number;
    }): string;
    requestSetEndorser(options: RequestSetEndorserOptions & {
        requestHandle: number;
    }): void;
    requestSetMultiSignature(options: RequestSetMultiSignatureOptions & {
        requestHandle: number;
    }): void;
    requestSetSignature(options: RequestSetSignatureOptions & {
        requestHandle: number;
    }): void;
    requestSetTxnAuthorAgreementAcceptance(options: RequestSetTxnAuthorAgreementAcceptanceOptions & {
        requestHandle: number;
    }): void;
}
