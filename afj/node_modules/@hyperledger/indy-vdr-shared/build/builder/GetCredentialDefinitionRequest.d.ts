import type { GetRequestResponse, GetRequestResultFoundBase, GetRequestResultNotFoundBase } from '../types';
import { IndyVdrRequest } from '../indyVdr';
export type GetCredentialDefinitionRequestOptions = {
    submitterDid?: string;
    credentialDefinitionId: string;
};
interface GetCredentialDefinitionFoundResult extends GetRequestResultFoundBase {
    type: '108';
    signature_type: 'CL';
    tag: string;
    ref: number;
    origin: string;
    data: {
        primary: Record<string, unknown>;
        revocation: Record<string, unknown>;
    };
}
interface GetCredentialDefinitionNotFoundResult extends GetRequestResultNotFoundBase {
    type: '108';
    signature_type: 'CL';
    tag: string;
    ref: number;
    origin: string;
    data: null;
}
export type GetCredentialDefinitionResponse = GetRequestResponse<GetCredentialDefinitionFoundResult, GetCredentialDefinitionNotFoundResult>;
export declare class GetCredentialDefinitionRequest extends IndyVdrRequest<GetCredentialDefinitionResponse> {
    constructor(options: GetCredentialDefinitionRequestOptions);
}
export {};
