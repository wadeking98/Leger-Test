import type { GetRequestResultFoundBase, GetRequestResultNotFoundBase, GetRequestResponse } from '../types';
import { IndyVdrRequest } from '../indyVdr';
export type GetSchemaRequestOptions = {
    submitterDid?: string;
    schemaId: string;
};
interface GetSchemaFoundResult extends GetRequestResultFoundBase {
    type: '107';
    dest: string;
    data: {
        version: string;
        attr_names: string[];
        name: string;
    };
}
interface GetSchemaNotFoundResult extends GetRequestResultNotFoundBase {
    type: '107';
    dest: string;
    data: {
        version: string;
        name: string;
    };
}
export type GetSchemaResponse = GetRequestResponse<GetSchemaFoundResult, GetSchemaNotFoundResult>;
export declare class GetSchemaRequest extends IndyVdrRequest<GetSchemaResponse> {
    constructor(options: GetSchemaRequestOptions);
}
export {};
