import type { GetRequestResultFoundBase, GetRequestResultNotFoundBase, GetRequestResponse } from '../types';
import { IndyVdrRequest } from '../indyVdr';
export type GetTransactionAuthorAgreementRequestOptions = {
    submitterDid?: string;
    data?: string;
};
interface GetTransactionAuthorAgreementFoundResult extends GetRequestResultFoundBase {
    type: '6';
    data: {
        ratification_ts: number;
        digest: string;
        version: string;
        text: string;
    };
}
interface GetTransactionAuthorAgreementNotFoundResult extends GetRequestResultNotFoundBase {
    type: '6';
    data: null;
}
export type GetTransactionAuthorAgreementResponse = GetRequestResponse<GetTransactionAuthorAgreementFoundResult, GetTransactionAuthorAgreementNotFoundResult>;
export declare class GetTransactionAuthorAgreementRequest extends IndyVdrRequest<GetTransactionAuthorAgreementResponse> {
    constructor(options: GetTransactionAuthorAgreementRequestOptions);
}
export {};
