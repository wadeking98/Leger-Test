import type { GetRequestResultFoundBase, GetRequestResultNotFoundBase, GetRequestResponse } from '../types';
import { IndyVdrRequest } from '../indyVdr';
export type GetAcceptanceMechanismsRequestOptions = {
    timestamp?: Date;
    submitterDid?: string;
    version?: string;
};
interface GetAcceptanceMechanismsFoundResult extends GetRequestResultFoundBase {
    type: '7';
    data: {
        version: string;
        amlContext: string;
        aml: Record<string, string>;
    };
}
interface GetAcceptanceMechanismsNotFoundResult extends GetRequestResultNotFoundBase {
    type: '7';
    data: null;
}
export type GetAcceptanceMechanismsResponse = GetRequestResponse<GetAcceptanceMechanismsFoundResult, GetAcceptanceMechanismsNotFoundResult>;
export declare class GetAcceptanceMechanismsRequest extends IndyVdrRequest<GetAcceptanceMechanismsResponse> {
    constructor(options: GetAcceptanceMechanismsRequestOptions);
}
export {};
